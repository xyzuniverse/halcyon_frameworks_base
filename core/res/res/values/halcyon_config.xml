<resources>

    <!-- Paths to the libraries that contain device specific key handlers -->
    <string-array name="config_deviceKeyHandlerLibs" translatable="false">
    </string-array>

    <!-- Names of the key handler classes -->
    <string-array name="config_deviceKeyHandlerClasses" translatable="false">
    </string-array>

    <!-- Whether to cleanup fingerprints upon connection to the daemon and when user switches -->
    <bool name="config_cleanupUnusedFingerprints">true</bool>

    <!-- The list of components which should be automatically disabled for a specific device.
     Note: this MUST not be used to randomly disable components, ask for approval first! -->
    <string-array name="config_deviceDisabledComponents" translatable="false" />

    <!-- The list of components which should be automatically disabled for all devices. -->
    <string-array name="config_globallyDisabledComponents" translatable="false" />

    <!-- The list of components which should be forced to be enabled. -->
    <string-array name="config_forceEnabledComponents" translatable="false" />

    <!-- Name of a font family to use as light font. For theming purpose. -->
    <string name="config_lightFontFamily" translatable="false">sans-serif-light</string>

    <!-- Name of a font family to use as regular font. For theming purpose. -->
    <string name="config_regularFontFamily" translatable="false">sans-serif-regular</string>

    <!-- Whether to use Richtap vibration -->
    <bool name="config_usesRichtapVibration">false</bool>

    <!-- Define device configs on boot -->
    <string-array name="global_device_configs_override" translatable="false">
    </string-array>
    <string-array name="device_configs_override" translatable="false">
    </string-array>

    <!-- The list of package IDs that are allowed to skip camera high frame rate checks. -->
    <string-array name="config_cameraHFRPrivAppList" translatable="false" />

    <!-- The list of package IDs that are allowed to use aux cameras.
         NOTE: If this list is empty then all apps will be able to use aux cameras. -->
    <string-array name="config_cameraAuxPackageAllowList" translatable="false" />

    <!-- The list of package IDs that are not allowed to use aux cameras. -->
    <string-array name="config_cameraAuxPackageExcludeList" translatable="false" />

    <!-- Path to fast charging status file to detect whether an oem fast charger is active -->
    <string name="config_oemFastChargerStatusPath" translatable="false"></string>

    <!-- Expected value from fast charging status file  -->
    <string name="config_oemFastChargerStatusValue" translatable="false">1</string>

    <!-- Whether device has an alert slider. -->
    <bool name="config_hasAlertSlider">false</bool>

    <!-- Defines the sysfs attribute path used by pocket bridge
        to communicate pocket state to the pocket judge kernel driver. -->
    <string name="config_pocketBridgeSysfsInpocket"></string>

    <!-- Pocket Lock -->
    <bool name="config_pocketModeSupported">true</bool>
    <!-- Defines custom OEM sensor for pocket detection. -->
    <string name="config_pocketJudgeVendorSensorName"></string>

    <!-- Whether to cancel fingerprint operation if not idle -->
    <bool name="config_fpCancelIfNotIdle">false</bool>

   <!-- These are system packages exempted from privacy indicator -->
    <string-array name="config_indicatorExemptedPackageNames" translatable="false" />

   <!-- The list of vendor package signatures that should also be considered
         platform signatures, specifically for use on devices with a vendor partition. -->
    <string-array name="config_vendorPlatformSignatures">
    </string-array>
    <!-- The list of Google platform package signatures
         that should also be considered platform signatures. -->
    <string-array name="config_googlePlatformSignatures">
    </string-array>
   <!-- The list of Microsoft platform package signatures
         that should also be considered platform signatures. -->
    <string-array name="config_microsoftPlatformSignatures">
    </string-array>

    <!-- Parallel space max count. Should overlay according to device performance. -->
    <integer name="config_parallelSpaceMaxCount">9</integer>

    <!-- List of system apps that are allowed to be locked with app lock.
    Use with extreme caution. -->
    <string-array name="config_appLockAllowedSystemApps" translatable="false" />
    
    <!-- All the capabilities of the LEDs on this device, stored as a bit field.
         This integer should equal the sum of the corresponding value for each
         of the following capabilities present:
         // Device has a color adjustable notification light.
         LIGHTS_RGB_NOTIFICATION_LED = 1
         // Device has a color adjustable battery light.
         LIGHTS_RGB_BATTERY_LED = 2
         LIGHTS_MULTIPLE_NOTIFICATION_LED = 4 (deprecated)
         // The notification light has adjustable pulsing capability.
         LIGHTS_PULSATING_LED = 8
         // Device has a multi-segment battery light that is able to
         // use the light brightness value to determine how many
         // segments to show (in order to represent battery level).
         LIGHTS_SEGMENTED_BATTERY_LED = 16
         // The notification light supports HAL adjustable brightness
         // via the alpha channel.
         // Note: if a device notification light supports LIGHTS_RGB_NOTIFICATION_LED
         // then HAL support is not necessary for brightness control.  In this case,
         // brightness support will be provided by lineage-sdk through the scaling of
         // RGB color values.
         LIGHTS_ADJUSTABLE_NOTIFICATION_LED_BRIGHTNESS = 32
         // Device has a battery light.
         LIGHTS_BATTERY_LED = 64
         // The battery light supports HAL adjustable brightness via
         // the alpha channel.
         // Note: if a device battery light supports LIGHTS_RGB_BATTERY_LED then HAL
         // support is not necessary for brightness control.  In this case,
         // brightness support will be provided by lineage-sdk through the scaling of
         // RGB color values.
         LIGHTS_ADJUSTABLE_BATTERY_LED_BRIGHTNESS = 128
         For example, a device with notification and battery lights that supports
         pulsating and RGB control would set this config to 75. -->
    <integer name="config_deviceLightCapabilities">8</integer>

    <!-- Default values for LiveDisplay -->
    <bool name="config_enableLiveDisplay">true</bool>
    <integer name="config_dayColorTemperature">6500</integer>
    <integer name="config_nightColorTemperature">4800</integer>
    <integer name="config_outdoorAmbientLux">12000</integer>
    <integer name="config_outdoorAmbientLuxHysteresis">1500</integer>
    <integer name="config_defaultLiveDisplayMode">0</integer>

    <!-- These values should map to the true min and max
         that the backend is capable of adjusting to. This
         is more important when using the ColorBalance mode,
         as the discrete adjustment is interpolated between
         this range (with config_dayColorTemperature at zero) -->
    <integer name="config_minColorTemperature">1000</integer>
    <integer name="config_maxColorTemperature">10000</integer>

    <bool name="config_defaultAutoContrast">false</bool>
    <bool name="config_defaultAutoOutdoorMode">true</bool>
    <bool name="config_defaultColorEnhancement">true</bool>
    <bool name="config_defaultCABC">false</bool>
    <bool name="config_defaultAntiFlicker">false</bool>

    <!-- Display mode remapping table.
         If the mode names returned by the backend do not match
         the predefined and translated strings in the Settings
         app, they can be remapped here. The format is
         "oldname:newname", one per entry. -->
    <string-array name="config_displayModeMappings" translatable="false">
    </string-array>

    <!-- Should we filter any display modes which are unmapped? -->
    <bool name="config_filterDisplayModes">false</bool>

  <!-- Whether charging control should be enabled by default -->
  <bool name="config_chargingControlEnabled">false</bool>
  <!-- Default charging control mode.
       This integer should be set to:
       1 - auto - Use the alarm to calculate the time range when to activate charging control
       2 - custom - Use time range when the device is usually charging for hours
       3 - limit - Just limit charging -->
  <integer name="config_defaultChargingControlMode">1</integer>
  <!-- Default time when charging control is activated.
       Represented as seconds from midnight (e.g. 79200 == 10pm). -->
  <integer name="config_defaultChargingControlStartTime">79200</integer>
  <!-- Default time when battery will be fully charged.
       Represented as seconds from midnight (e.g. 21600 == 6am). -->
  <integer name="config_defaultChargingControlTargetTime">21600</integer>
  <!-- Default charging limit. -->
  <integer name="config_defaultChargingControlLimit">80</integer>
  <!-- Considering the fact that the system might have an incorrect estimation of the time to
       full. Set a time margin to make the device fully charged before the target time arrives.
       The unit is minutes and the default value is 30 minutes. If you find that it is not enough
       to make the device to be fully charged at the target time, increase the value
  -->
  <integer name="config_chargingControlTimeMargin">30</integer>
  <!-- For a device that cannot bypass battery when charging stops (that is, the battery current
       is 0mA when charging stops), the battery will gradually discharge. So we need to make it
       recharge when the battery level is lower than a threshold. Set this so that the device
       will be charged between (limit - val) and limit. -->
  <integer name="config_chargingControlBatteryRechargeMargin">10</integer>
</resources>
